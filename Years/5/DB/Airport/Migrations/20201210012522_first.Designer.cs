// <auto-generated />
using System;
using Airport;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Airport.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201210012522_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Airport.Entities.Administration", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Administrations");
                });

            modelBuilder.Entity("Airport.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Airport.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ChildrenNumber")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Salary")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Sex")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TeamId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Airport.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("FlightStateId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("FlightTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PlaneId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RouteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("FlightStateId");

                    b.HasIndex("FlightTypeId");

                    b.HasIndex("PlaneId");

                    b.HasIndex("RouteId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Airport.Entities.FlightState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("FlightStates");
                });

            modelBuilder.Entity("Airport.Entities.FlightType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("FlightTypes");
                });

            modelBuilder.Entity("Airport.Entities.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("PlaneId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Result")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("PlaneId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("Airport.Entities.MedicalExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Result")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MedicalExaminations");
                });

            modelBuilder.Entity("Airport.Entities.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Passport")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Sex")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Airport.Entities.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PlaneTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SeatsNumber")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TeamId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("PlaneTypeId");

                    b.HasIndex("TeamId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Airport.Entities.PlaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");
                });

            modelBuilder.Entity("Airport.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Destination")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Source")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TransferPoint")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Airport.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Airport.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("Luggage")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int>("PassengerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TicketStateId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("PassengerId");

                    b.HasIndex("TicketStateId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Airport.Entities.TicketState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("TicketStates");
                });

            modelBuilder.Entity("Airport.Entities.Administration", b =>
                {
                    b.HasOne("Airport.Entities.Department", "Department")
                        .WithMany("Administrations")
                        .HasForeignKey("DepartmentId1");

                    b.HasOne("Airport.Entities.Employee", "Employee")
                        .WithMany("Administrations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airport.Entities.Employee", b =>
                {
                    b.HasOne("Airport.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.Team", "Team")
                        .WithMany("Employees")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Airport.Entities.Flight", b =>
                {
                    b.HasOne("Airport.Entities.FlightState", "FlightState")
                        .WithMany("Flights")
                        .HasForeignKey("FlightStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.FlightType", "FlightType")
                        .WithMany("Flights")
                        .HasForeignKey("FlightTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.Plane", "Plane")
                        .WithMany("Flights")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.Route", "Route")
                        .WithMany("Flights")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airport.Entities.Inspection", b =>
                {
                    b.HasOne("Airport.Entities.Plane", "Plane")
                        .WithMany("Inspections")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airport.Entities.MedicalExamination", b =>
                {
                    b.HasOne("Airport.Entities.Employee", "Employee")
                        .WithMany("MedicalExaminations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airport.Entities.Plane", b =>
                {
                    b.HasOne("Airport.Entities.PlaneType", "PlaneType")
                        .WithMany("Planes")
                        .HasForeignKey("PlaneTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.Team", "Team")
                        .WithMany("Planes")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Airport.Entities.Ticket", b =>
                {
                    b.HasOne("Airport.Entities.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airport.Entities.TicketState", "TicketState")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
